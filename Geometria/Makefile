# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=release_x86_64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
TARGETDIR = .
TARGET = $(TARGETDIR)/Hub
DEFINES += -D_SILENCE_EXPERIMENTAL_FILESYSTEM_DEPRECATION_WARNING -DGLEW_STATIC -DNDEBUG -D_CONSOLE -DCURL_STATICLIB
INCLUDES += -I../Libraries/include -IBehaviours -IMainHeader -I. -IGame -I../Libraries/GLFW/GLFWCore/include/GLFW -I../Libraries/GLEW/GLEWCore/include -I../Libraries/YAMLCPP/YAMLCPPCore/include -I../Libraries/NVIDIAPHYSX/include -I../Libraries/NVIDIAPHYSX/pxshared/include -I.. -I../Libraries/ZLIB
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release_x86_64)
OBJDIR = obj/x86_64
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -w
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -w
LIBS += ../Libraries/GLFW/bin/x86_64/Release/libGLFW.a ../Libraries/GLEW/bin/x86_64/Release/libGLEW.a ../Libraries/YAMLCPP/bin/x86_64/Release/libyaml-cpp.a ../Libraries/ZLIB/bin/x86_64/Release/libzlib.a -lcurl -lGL -lpthread -lm -ldl -lstdc++fs -lPhysX_static_64 -lPhysXExtensions_static_64 -lPhysXCharacterKinematic_static_64 -lPhysXCooking_static_64 -lPhysXFoundation_static_64 -lPhysXVehicle_static_64 -lPhysXPvdSDK_static_64 -lPhysXCommon_static_64
LDDEPS += ../Libraries/GLFW/bin/x86_64/Release/libGLFW.a ../Libraries/GLEW/bin/x86_64/Release/libGLEW.a ../Libraries/YAMLCPP/bin/x86_64/Release/libyaml-cpp.a ../Libraries/ZLIB/bin/x86_64/Release/libzlib.a
ALL_LDFLAGS += $(LDFLAGS) -L../Libraries/NVIDIAPHYSX/binaries/Linux -L/usr/lib64 -m64 -s

else ifeq ($(config),release_x86)
OBJDIR = obj/x86
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -w
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -w
LIBS += ../Libraries/GLFW/bin/x86/Release/libGLFW.a ../Libraries/GLEW/bin/x86/Release/libGLEW.a ../Libraries/YAMLCPP/bin/x86/Release/libyaml-cpp.a ../Libraries/ZLIB/bin/x86/Release/libzlib.a -lcurl -lGL -lpthread -lm -ldl -lstdc++fs -lPhysX_static_64 -lPhysXExtensions_static_64 -lPhysXCharacterKinematic_static_64 -lPhysXCooking_static_64 -lPhysXFoundation_static_64 -lPhysXVehicle_static_64 -lPhysXPvdSDK_static_64 -lPhysXCommon_static_64
LDDEPS += ../Libraries/GLFW/bin/x86/Release/libGLFW.a ../Libraries/GLEW/bin/x86/Release/libGLEW.a ../Libraries/YAMLCPP/bin/x86/Release/libyaml-cpp.a ../Libraries/ZLIB/bin/x86/Release/libzlib.a
ALL_LDFLAGS += $(LDFLAGS) -L../Libraries/NVIDIAPHYSX/binaries/Linux -L/usr/lib32 -m32 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Animation.o
GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/Behaviour.o
GENERATED += $(OBJDIR)/BoxCollider.o
GENERATED += $(OBJDIR)/Broadcast.o
GENERATED += $(OBJDIR)/Camera.o
GENERATED += $(OBJDIR)/Color.o
GENERATED += $(OBJDIR)/CompilationCore.o
GENERATED += $(OBJDIR)/Compiler.o
GENERATED += $(OBJDIR)/DragBorderlessWindow.o
GENERATED += $(OBJDIR)/DynamicLinker.o
GENERATED += $(OBJDIR)/Editor.o
GENERATED += $(OBJDIR)/Encryption.o
GENERATED += $(OBJDIR)/Files.o
GENERATED += $(OBJDIR)/GUIML.o
GENERATED += $(OBJDIR)/Graphics.o
GENERATED += $(OBJDIR)/GuillotineBinPack.o
GENERATED += $(OBJDIR)/ImGUIElement.o
GENERATED += $(OBJDIR)/ImGuizmo.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/MaxRectsBinPack.o
GENERATED += $(OBJDIR)/MiniAudioSource.o
GENERATED += $(OBJDIR)/MiniShader.o
GENERATED += $(OBJDIR)/Model.o
GENERATED += $(OBJDIR)/Multithreading.o
GENERATED += $(OBJDIR)/PhysicsManager.o
GENERATED += $(OBJDIR)/Plane.o
GENERATED += $(OBJDIR)/Rect.o
GENERATED += $(OBJDIR)/RendererCore.o
GENERATED += $(OBJDIR)/Rigidbody.o
GENERATED += $(OBJDIR)/SceneAndDrawCall.o
GENERATED += $(OBJDIR)/SceneFile.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/ShelfBinPack.o
GENERATED += $(OBJDIR)/StringAPI.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/Trenchbroom.o
GENERATED += $(OBJDIR)/Vector.o
GENERATED += $(OBJDIR)/Web.o
GENERATED += $(OBJDIR)/WebRequest.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/base64.o
GENERATED += $(OBJDIR)/imgui.o
GENERATED += $(OBJDIR)/imgui_demo.o
GENERATED += $(OBJDIR)/imgui_draw.o
GENERATED += $(OBJDIR)/imgui_impl_glfw.o
GENERATED += $(OBJDIR)/imgui_impl_opengl3.o
GENERATED += $(OBJDIR)/imgui_tables.o
GENERATED += $(OBJDIR)/imgui_widgets.o
GENERATED += $(OBJDIR)/ioapi.o
GENERATED += $(OBJDIR)/lodepng.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/miniaudio_impl.o
GENERATED += $(OBJDIR)/mztools.o
GENERATED += $(OBJDIR)/pugixml.o
GENERATED += $(OBJDIR)/unzip.o
GENERATED += $(OBJDIR)/zip.o
OBJECTS += $(OBJDIR)/Animation.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Behaviour.o
OBJECTS += $(OBJDIR)/BoxCollider.o
OBJECTS += $(OBJDIR)/Broadcast.o
OBJECTS += $(OBJDIR)/Camera.o
OBJECTS += $(OBJDIR)/Color.o
OBJECTS += $(OBJDIR)/CompilationCore.o
OBJECTS += $(OBJDIR)/Compiler.o
OBJECTS += $(OBJDIR)/DragBorderlessWindow.o
OBJECTS += $(OBJDIR)/DynamicLinker.o
OBJECTS += $(OBJDIR)/Editor.o
OBJECTS += $(OBJDIR)/Encryption.o
OBJECTS += $(OBJDIR)/Files.o
OBJECTS += $(OBJDIR)/GUIML.o
OBJECTS += $(OBJDIR)/Graphics.o
OBJECTS += $(OBJDIR)/GuillotineBinPack.o
OBJECTS += $(OBJDIR)/ImGUIElement.o
OBJECTS += $(OBJDIR)/ImGuizmo.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/MaxRectsBinPack.o
OBJECTS += $(OBJDIR)/MiniAudioSource.o
OBJECTS += $(OBJDIR)/MiniShader.o
OBJECTS += $(OBJDIR)/Model.o
OBJECTS += $(OBJDIR)/Multithreading.o
OBJECTS += $(OBJDIR)/PhysicsManager.o
OBJECTS += $(OBJDIR)/Plane.o
OBJECTS += $(OBJDIR)/Rect.o
OBJECTS += $(OBJDIR)/RendererCore.o
OBJECTS += $(OBJDIR)/Rigidbody.o
OBJECTS += $(OBJDIR)/SceneAndDrawCall.o
OBJECTS += $(OBJDIR)/SceneFile.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/ShelfBinPack.o
OBJECTS += $(OBJDIR)/StringAPI.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/Trenchbroom.o
OBJECTS += $(OBJDIR)/Vector.o
OBJECTS += $(OBJDIR)/Web.o
OBJECTS += $(OBJDIR)/WebRequest.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/base64.o
OBJECTS += $(OBJDIR)/imgui.o
OBJECTS += $(OBJDIR)/imgui_demo.o
OBJECTS += $(OBJDIR)/imgui_draw.o
OBJECTS += $(OBJDIR)/imgui_impl_glfw.o
OBJECTS += $(OBJDIR)/imgui_impl_opengl3.o
OBJECTS += $(OBJDIR)/imgui_tables.o
OBJECTS += $(OBJDIR)/imgui_widgets.o
OBJECTS += $(OBJDIR)/ioapi.o
OBJECTS += $(OBJDIR)/lodepng.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/miniaudio_impl.o
OBJECTS += $(OBJDIR)/mztools.o
OBJECTS += $(OBJDIR)/pugixml.o
OBJECTS += $(OBJDIR)/unzip.o
OBJECTS += $(OBJDIR)/zip.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Hub
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Hub
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Animation.o: Animation/Animation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: Application/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Behaviour.o: Behaviours/Behaviour.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Broadcast.o: Broadcast/Broadcast.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CompilationCore.o: Compiler/CompilationCore.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Compiler.o: Compiler/Compiler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Editor.o: Editor/Editor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/base64.o: Encryption/Base64/base64.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Encryption.o: Encryption/Encryption.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Files.o: Files/Files.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GUIML.o: Files/GUIML/GUIML.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lodepng.o: Files/Image/lodepng.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneFile.o: Files/Scene/SceneFile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Trenchbroom.o: Files/Trenchbroom/Trenchbroom.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pugixml.o: Files/XML/pugixml.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ioapi.o: Files/ZIP/ioapi.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mztools.o: Files/ZIP/mztools.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/unzip.o: Files/ZIP/unzip.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zip.o: Files/ZIP/zip.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DynamicLinker.o: Game/Scripts/DynamicLinker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: Graphics/Cores/Camera/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Graphics.o: Graphics/Cores/MainAPI/Graphics.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererCore.o: Graphics/Cores/Renderer/RendererCore.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: Graphics/Cores/Shader/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GuillotineBinPack.o: Graphics/Cores/Texture/MaxReactsBinPack/GuillotineBinPack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MaxRectsBinPack.o: Graphics/Cores/Texture/MaxReactsBinPack/MaxRectsBinPack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Rect.o: Graphics/Cores/Texture/MaxReactsBinPack/Rect.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ShelfBinPack.o: Graphics/Cores/Texture/MaxReactsBinPack/ShelfBinPack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: Graphics/Cores/Texture/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: Graphics/Cores/Window/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DragBorderlessWindow.o: Graphics/Externals/DragBorderlessWindow.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGUIElement.o: Graphics/Externals/ImGUIElement.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MiniShader.o: Graphics/Externals/MiniShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Model.o: Graphics/Externals/Model.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneAndDrawCall.o: Graphics/Externals/SceneAndDrawCall.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuizmo.o: ImGUI/ImGuizmo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui.o: ImGUI/imgui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_demo.o: ImGUI/imgui_demo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: ImGUI/imgui_draw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_glfw.o: ImGUI/imgui_impl_glfw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_opengl3.o: ImGUI/imgui_impl_opengl3.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: ImGUI/imgui_tables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: ImGUI/imgui_widgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: Input/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MiniAudioSource.o: MiniAudio/MiniAudioSource.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/miniaudio_impl.o: MiniAudio/miniaudio_impl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Multithreading.o: Multithreading/Multithreading.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BoxCollider.o: Physics/Colliders/BoxCollider.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PhysicsManager.o: Physics/PhysicsManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Rigidbody.o: Physics/Rigidbody/Rigidbody.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/StringAPI.o: String/StringAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Color.o: Tools/Color.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Plane.o: Tools/Plane.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Vector.o: Tools/Vector.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Web.o: Web/Web.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WebRequest.o: WebRequest/WebRequest.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif